@page "/backpack/list"
@using MauiMudBlazor.Entities
@using MauiMudBlazor.Contexts
@using Microsoft.EntityFrameworkCore
@inject MauiMudBlazor.Contexts.BackpackAppContext _context
@inject NavigationManager NavManager



<h1>View Backpacks</h1>
<h4>Backpacks</h4>
<br />
<br />

@if (isAddFormVisible)
{
    <div class="mb-4">
        <h5>Add New Backpack</h5>
        <EditForm Model="newBackpack" OnValidSubmit="HandleValidSubmit">
            <DataAnnotationsValidator />
            <ValidationSummary />

            <div class="mb-3">
                <label for="name" class="form-label">Name:</label>
                <InputText id="name" class="form-control" @bind-Value="newBackpack.Name" />
            </div>

            <div class="mb-3">
                <label for="weight" class="form-label">Weight:</label>
                <InputNumber id="weight" class="form-control" @bind-Value="newBackpack.Weight" />
            </div>

            <div class="mb-3">
                <label for="CapacityLiters" class="form-label">Capacity(liters):</label>
                <InputNumber id="CapacityLiters" class="form-control" @bind-Value="newBackpack.CapacityLiters" />
            </div>

            <div class="mb-3">
                <label for="description" class="form-label">Description:</label>
                <InputText id="description" class="form-control" @bind-Value="newBackpack.Description" />
            </div>

            <div class="d-flex justify-content-between">
                <button type="submit" class="btn btn-primary" @onclick="HandleValidSubmit">Add Backpack</button>
                <button type="button" class="btn btn-secondary" @onclick="HideAddBackpackForm">Cancel</button>
            </div>
        </EditForm>
    </div>
}

@if (Backpacks.Any())
{
    <div class="row">
        @foreach (var pack in Backpacks)
        {
            <div class="col-md-4 col-sm-6 mb-4">
                <div class="card mb-4" style="width: 18rem;">
                    <a asp-page="#" asp-route-id="@pack.BackpackId" class="card-link">
                        <img src="" class="card-img-top" alt="Backpack Image">
                        <div class="card-body">
                            <h5 class="card-title">@pack.Name</h5>
                            <p class="card-text">@pack.CapacityLiters</p>
                            <p class="card-text">Weight: @pack.Weight</p>
                            <p class="card-text">@pack.Description</p>
                        </div>
                    </a>
                    <div class="card-body">
                        <div class="btn-group" role="group">
                            <a href="/items/edit/@pack.BackpackId" class="btn btn-secondary">Edit</a>
                            <a href="/items/delete/@pack.BackpackId" class="btn btn-danger">Delete</a>
                        </div>
                    </div>
                </div>
            </div>
        }
    </div>
}
else
{
    <p>No items found.</p>
}







@code 
{
	private List<Backpack> Backpacks = new();
	private Backpack newBackpack = new Backpack();
	private bool isAddFormVisible = false;


    protected override async Task OnInitializedAsync()
    {
        // ensure context is initialized
        if (_context == null)
            throw new InvalidOperationException("Database context is not initialized.");

        Backpacks = await _context.Backpacks.ToListAsync();

    }

    private void ShowAddBackpackForm() => isAddFormVisible = true;
    private void HideAddBackpackForm() => isAddFormVisible = false;


    private async Task HandleValidSubmit()
    {
        if (_context != null)
        {
            
            newBackpack.CreatedAt = DateTime.Now;
            _context.Backpacks.Add(newBackpack);
            await _context.SaveChangesAsync();
            Backpacks.Add(newBackpack); // Add to the list to update the UI
            newBackpack = new Backpack(); // Reset form fields
            isAddFormVisible = false; // Hide form after submission
        }
    }

}
